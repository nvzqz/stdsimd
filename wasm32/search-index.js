var N = null;var searchIndex = {};
searchIndex["coresimd"]={"doc":"SIMD and vendor intrinsics support library.","items":[[0,"arch","coresimd","Platform dependent vendor intrinsics.",N,N],[0,"wasm32","coresimd::arch","Platform-specific intrinsics for the `wasm32` platform.",N,N],[5,"memory_size","coresimd::arch::wasm32","Corresponding intrinsic to wasm's [`memory.size` instruction][instr]",N,[[["u32"]],["usize"]]],[5,"memory_grow","","Corresponding intrinsic to wasm's [`memory.grow` instruction][instr]",N,[[["u32"],["usize"]],["usize"]]],[5,"unreachable","","Generates the trap instruction `UNREACHABLE`",N,N]],"paths":[]};
searchIndex["stdsimd"]={"doc":"SIMD and vendor intrinsics support library.","items":[[0,"arch","stdsimd","SIMD and vendor intrinsics module.",N,N],[0,"wasm32","stdsimd::arch","Platform-specific intrinsics for the `wasm32` platform.",N,N],[5,"unreachable","stdsimd::arch::wasm32","Generates the trap instruction `UNREACHABLE`",N,N],[5,"memory_grow","","Corresponding intrinsic to wasm's [`memory.grow` instruction][instr]",N,[[["u32"],["usize"]],["usize"]]],[5,"memory_size","","Corresponding intrinsic to wasm's [`memory.size` instruction][instr]",N,[[["u32"]],["usize"]]],[14,"is_x86_feature_detected","stdsimd","",N,N],[14,"is_arm_feature_detected","","",N,N],[14,"is_aarch64_feature_detected","","",N,N],[14,"is_powerpc_feature_detected","","",N,N],[14,"is_powerpc64_feature_detected","","",N,N],[14,"is_mips_feature_detected","","",N,N],[14,"is_mips64_feature_detected","","",N,N]],"paths":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);
